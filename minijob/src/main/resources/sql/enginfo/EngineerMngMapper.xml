<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.engInfo.dao.EngineerListDao">

	<!-- 그룹코드 목록 조회 -->
	
	<select id="listEngineerCod" resultType="kr.happyjob.study.engInfo.model.EngineerMngModel">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.listEngineerCod*/
		SELECT	
				loginID,
				name,
				user_contents,
				user_hope_area1,
				user_hope_area2,
				user_hope_area3,
				user_grade						
			
		FROM  tb_userinfo
<!-- 		<where>
		<if test="(areaall != null) and (!areaall.equals(''))">
		    and user_hope_area1 LIKE CONCAT('%', #{areaall}, '%') 
		</if>
		<if test="(sklall != null) and (!sklall.equals(''))">
		    and user_grade LIKE CONCAT('%', #{sklall}, '%') 
		</if>
		</where> -->
		LIMIT #{pageIndex}, #{pageSize} 
		
	</select>
	
	<!-- 그룹코드 목록 총 갯수 조회 -->
	
	<select id="countListEngineerCod" resultType="int">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.countListEngineerCod*/
		SELECT	count(*) as cnt
		FROM  tb_userinfo
		<where>
			<if test="(areaall != null) and (!areaall.equals(''))">
			    and user_hope_area1 LIKE CONCAT('%', #{areaall}, '%') 
			</if>
			<if test="(sklall != null) and (!sklall.equals(''))">
			    and user_grade LIKE CONCAT('%', #{sklall}, '%') 
			</if>			
		</where>	
					
	</select>
	
	<!-- 
	<select id="listEngineerAll" resultType="kr.happyjob.study.info.model.Engineerlist">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.Engineerlist*/
		SELECT  loginID,
				name,
				gender_cd,
				user_email,
				user_zipcode,
				user_address,
				user_dt_address,
				user_tel1,
				user_tel2,
				user_tel3,
				user_hope_work,
				career_yn,
				career_mm,
				salary,
				consult_yn,
				user_contents,
				user_hope_area1,
				user_hope_area2,
				user_hope_area3,
				user_grade,
				user_describe,
				singular_facts	
				
		FROM  tb_userinfo
		WHERE loginID = #{loginID}
		
	</select>
	
	<select id="listskill" resultType="kr.happyjob.study.info.model.Engineerskill">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.Engineerskill*/
		SELECT  group_code,
				detail_code
				
		FROM  tb_userskill
		WHERE loginID = #{loginID}
		
	</select>
	
	그룹코드 저장
	<insert id="insertEngineerCod">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.insertEngineerCod*/
		INSERT INTO tb_userinfo
		(
				loginID,
				name,
				gender_cd,
				user_email,
				user_zipcode,
				user_address,
				user_dt_address,
				user_tel1,
				user_tel2,
				user_tel3,
				user_hope_work,
				career_yn,
				career_mm,
				salary,
				consult_yn,
				user_contents,
				user_hope_area1,
				user_hope_area2,
				user_hope_area3,
				user_grade,
				user_describe,
				singular_facts	
		)
		VALUES
		(
				#{registerId}
			,	#{registerName}
			,	#{rggender}
			,   #{registerEmail}
			,	#{detailaddr}
			,	#{loginaddr}
			,	#{loginaddr1}
			,	#{tel1}
			,	#{tel2}
			,	#{tel3}
			,	#{user_hope_work}
			,	#{career_yn}
			,	#{career_mm}
			,	#{salary}
			,	#{consult_yn}
			,	#{user_describe}
			,	#{user_hope_area1}
			,	#{user_hope_area2}
			,	#{user_hope_area3}
			,	#{user_grade}
			,	#{user_contents}
			,	#{singular_facts}
		)		
	</insert>
	
	그룹코드 수정
	<update id="updateEngineerCod">
		/*kr.kosmo.jobkorea.info.dao.EngineerlistDao.updateEngineerCod*/
		UPDATE tb_userinfo  SET
			,	name = #{registerName}
			,   gender_cd = #{rggender}
			,	user_email = #{registerEmail}
			,	user_zipcode = #{detailaddr}
			,	user_address = #{loginaddr}
			,	user_dt_address = #{loginaddr1}
			,	user_tel1 = #{tel1}
			,	user_tel2 = #{tel2}
			,	user_tel3 = #{tel3}
			,	user_hope_work = #{user_hope_work}
			,	career_yn = #{career_yn}
			,	career_mm = #{career_mm}
			,	salary = #{salary}
			,	consult_yn = #{consult_yn}
			,	user_contents = #{user_describe}
			,	user_hope_area1 = #{user_hope_area1}
			,	user_hope_area2 = #{user_hope_area2}
			,	user_hope_area3 = #{user_hope_area3}
			,	user_hope_area3 = #{user_hope_area3}
			,	user_grade = #{user_grade}
			,	user_describe = #{user_contents}
			,	singular_facts = #{singular_facts}
			
		WHERE loginID = #{registerId}
	</update>
	
	 -->
	
	
</mapper>